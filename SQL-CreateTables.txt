create table Industries
(
  IndustryID int not null auto_increment, 
  Name       varchar(255), 
  primary key (IndustryID)
);

create table EmployabilitySkills
(
  EmployabilitySkillID int not null auto_increment, 
  Skill                varchar(80), 
  Requirements         varchar(255), 
  primary key (EmployabilitySkillID)
);


create table Categories
(
  CategoryID         int not null auto_increment, 
  IndustryID         int not null, 
  Name                      varchar(80), 
  primary key (CategoryID),
  foreign key (IndustryID) references Industries(IndustryID)
);


create table CategoryEmployabilitySkills
(
  CategoryEmployabilitySkillID  int not null auto_increment,
  CategoryID                    int not null,
  EmployabilitySkillID          int not null,
  primary key (CategoryEmployabilitySkillID),
  foreign key (CategoryID) references Categories(CategoryID),
  foreign key (EmployabilitySkillID) references EmployabilitySkills(EmployabilitySkillID)
);

create table Courses
(
  CourseID             int not null auto_increment, 
  CategoryID           int not null, 
  Name                 varchar(80), 
  Duration             varchar(60), 
  Provider             varchar(60), 
  Link                 varchar(100), 
  primary key (CourseID),
  foreign key (CategoryID) references Categories(CategoryID)
);

create table JobOutcomes
(
  JobOutcomeID      int not null auto_increment,
  Name              varchar(80),
  InDemand			boolean,
  primary key (JobOutcomeID)
);

create table CourseJobOutcomes
(
  CourseJobOutcomeID    int not null auto_increment,
  JobOutcomeID          int not null,
  CourseID              int not null,
  primary key (CourseJobOutcomeID),
  foreign key (JobOutcomeID) references JobOutcomes(JobOutcomeID),
  foreign key (CourseID) references Courses(CourseID)
);

create table Users
(
  userID        int not null auto_increment, 
  Email         varchar(60), 
  DateOfBirth   date, 
  ContactNumber int(20), 
  CreationDate  date, 
  LastLoginDate date, 
  Admin         boolean, 
  primary key (userID)
);

create table Analytics
(
  AnalyticID        int not null auto_increment, 
  UserID            int not null, 
  CourseID          int not null, 
  DateAccessed      date, 
  primary key (AnalyticID),
  foreign key (UserID)      references Users(UserID),
  foreign key (CourseID)    references Courses(CourseID)
);
